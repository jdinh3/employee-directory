{"version":3,"sources":["components/Header.js","components/SearchBar.js","utils/API.js","components/EmployeeTable.js","components/body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","SearchBar","state","search","handleInputChange","event","value","target","props","onSearchCallback","setState","this","onChange","name","type","id","placeholder","aria-label","Component","API","getEmployees","axios","get","Employee","employee","scope","src","picture","large","alt","first","last","phone","href","email","format","withTitle","dob","date","EmployeeTable","employees","length","map","i","Body","filteredEmployees","then","res","console","log","holdData","data","results","filtered","filter","toLowerCase","includes","searchData","searchValue","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ec34702.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <div className=\"jumbotron header jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">Employee Directory</h1>\n        <p className=\"lead\">\n          Click on carrots to filter by heading or use the search box to narrow\n          your results.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nclass SearchBar extends Component {\n  // Sets the component's initial state\n  state = {\n    search: \"\",\n  };\n\n  handleInputChange = (event) => {\n    // Grabs the value of the user's input\n    const { value } = event.target;\n    this.props.onSearchCallback(value);\n    this.setState({ search: value });\n  };\n\n  render() {\n    return (\n      <div className=\"form-outline m-4\">\n        <input\n          value={this.state.search}\n          onChange={this.handleInputChange}\n          name=\"employeeSearch\"\n          type=\"text\"\n          id=\"form1\"\n          className=\"form-control\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import axios from \"axios\";\n\n// fetches all users at random\nconst API = {\n  getEmployees: function () {\n    return axios.get(\"https://randomuser.me/api/?results=60&nat=us\");\n  },\n};\n\nexport default API;\n","import React from \"react\";\nimport Moment from \"react-moment\";\n\nfunction EmployeeTable(props) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Images</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Phone</th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">DOB</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees &&\n          props.employees.length &&\n          props.employees.map((employee, i) => (\n            <Employee key={`employee-${i}`} employee={employee} />\n          ))}\n      </tbody>\n    </table>\n  );\n}\n\nconst Employee = ({ employee }) => {\n  return (\n    <tr>\n      <th scope=\"row\">\n        <img\n          src={employee.picture.large}\n          alt={`${employee.name.first} ${employee.name.last}`}\n        ></img>\n      </th>\n      <td>{`${employee.name.first} ${employee.name.last}`}</td>\n      <td className=\"text-justify\">{employee.phone}</td>\n      <td>\n        <a href=\"mailto: Otto@gmail.com\">{employee.email}</a>\n      </td>\n      <td>\n        <Moment format=\"MMM Do, YYYY\" withTitle>\n          {employee.dob.date}\n        </Moment>\n      </td>\n    </tr>\n  );\n};\n\nexport default EmployeeTable;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Table from \"./EmployeeTable\";\nexport default class Body extends Component {\n  state = {\n    employees: [],\n  };\n  filteredEmployees = [];\n\n  componentDidMount() {\n    API.getEmployees().then((res) => {\n      console.log(res);\n      // maps through the employee data\n      const holdData = res.data.results.map((employee) => {\n        return employee;\n      });\n      this.setState({ employees: holdData });\n    });\n  }\n\n  componentDidUpdate() {\n    const filtered = this.state.employees.filter((employee) => {\n      return employee.name.first\n        .toLowerCase()\n        .includes(this.props.searchData.toLowerCase());\n    });\n    this.filteredEmployees = filtered;\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Table\n          employees={\n            !this.props.searchData\n              ? this.state.employees\n              : this.filteredEmployees\n          }\n        />\n        <p>{this.props.searchValue}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport Body from \"./components/body\";\n\n// pass value from search bar to app\n// create callback function in the parent\n// pass callback function as a prop to the child\n// send value from app to body\n// filter through employees using passed value\nclass App extends Component {\n  state = {\n    searchData: \"\",\n  };\n\n  onSearchCallback = (searchValue) => {\n    this.setState({ searchData: searchValue });\n  };\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"App\">\n        <Header />\n        <SearchBar onSearchCallback={this.onSearchCallback} />\n        <Body searchData={this.state.searchData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}